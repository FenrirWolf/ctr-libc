pub const STDIN_FILENO: ::c_int = 0;
pub const STDOUT_FILENO: ::c_int = 1;
pub const STDERR_FILENO: ::c_int = 2;

pub const EPERM: ::c_int = 1;
pub const ENOENT: ::c_int = 2;
pub const ESRCH: ::c_int = 3;
pub const EINTR: ::c_int = 4;
pub const EIO: ::c_int = 5;
pub const ENXIO: ::c_int = 6;
pub const E2BIG: ::c_int = 7;
pub const ENOEXEC: ::c_int = 8;
pub const EBADF: ::c_int = 9;
pub const ECHILD: ::c_int = 10;
pub const EAGAIN: ::c_int = 11;
pub const ENOMEM: ::c_int = 12;
pub const EACCES: ::c_int = 13;
pub const EFAULT: ::c_int = 14;
pub const EBUSY: ::c_int = 16;
pub const EEXIST: ::c_int = 17;
pub const EXDEV: ::c_int = 18;
pub const ENODEV: ::c_int = 19;
pub const ENOTDIR: ::c_int = 20;
pub const EISDIR: ::c_int = 21;
pub const EINVAL: ::c_int = 22;
pub const ENFILE: ::c_int = 23;
pub const EMFILE: ::c_int = 24;
pub const ENOTTY: ::c_int = 25;
pub const ETXTBSY: ::c_int = 26;
pub const EFBIG: ::c_int = 27;
pub const ENOSPC: ::c_int = 28;
pub const ESPIPE: ::c_int = 29;
pub const EROFS: ::c_int = 30;
pub const EMLINK: ::c_int = 31;
pub const EPIPE: ::c_int = 32;
pub const EDOM: ::c_int = 33;
pub const ERANGE: ::c_int = 34;
pub const ENOMSG: ::c_int = 35;
pub const EIDRM: ::c_int = 36;
pub const EDEADLK: ::c_int = 45;
pub const ENOLCK: ::c_int = 46;
pub const ENOSTR: ::c_int = 60;
pub const ENODATA: ::c_int = 61;
pub const ETIME: ::c_int = 62;
pub const ENOSR: ::c_int = 63;
pub const ENOLINK: ::c_int = 67;
pub const EPROTO: ::c_int = 71;
pub const EMULTIHOP: ::c_int = 74;
pub const EBADMSG: ::c_int = 77;
pub const EFTYPE: ::c_int = 79;
pub const ENOSYS: ::c_int = 88;
pub const ENOTEMPTY: ::c_int = 90;
pub const ENAMETOOLONG: ::c_int = 91;
pub const ELOOP: ::c_int = 92;
pub const EOPNOTSUPP: ::c_int = 95;
pub const EPFNOSUPPORT: ::c_int = 96;
pub const ECONNRESET: ::c_int = 104;
pub const ENOBUFS: ::c_int = 105;
pub const EAFNOSUPPORT: ::c_int = 106;
pub const EPROTOTYPE: ::c_int = 107;
pub const ENOTSOCK: ::c_int = 108;
pub const ENOPROTOOPT: ::c_int = 109;
pub const ECONNREFUSED: ::c_int = 111;
pub const EADDRINUSE: ::c_int = 112;
pub const ECONNABORTED: ::c_int = 113;
pub const ENETUNREACH: ::c_int = 114;
pub const ENETDOWN: ::c_int = 115;
pub const ETIMEDOUT: ::c_int = 116;
pub const EHOSTDOWN: ::c_int = 117;
pub const EHOSTUNREACH: ::c_int = 118;
pub const EINPROGRESS: ::c_int = 119;
pub const EALREADY: ::c_int = 120;
pub const EDESTADDRREQ: ::c_int = 121;
pub const EMSGSIZE: ::c_int = 122;
pub const EPROTONOSUPPORT: ::c_int = 123;
pub const EADDRNOTAVAIL: ::c_int = 125;
pub const ENETRESET: ::c_int = 126;
pub const EISCONN: ::c_int = 127;
pub const ENOTCONN: ::c_int = 128;
pub const ETOOMANYREFS: ::c_int = 129;
pub const EDQUOT: ::c_int = 132;
pub const ESTALE: ::c_int = 133;
pub const ENOTSUP: ::c_int = 134;
pub const EILSEQ: ::c_int = 138;
pub const EOVERFLOW: ::c_int = 139;
pub const ECANCELED: ::c_int = 140;
pub const ENOTRECOVERABLE: ::c_int = 141;
pub const EOWNERDEAD: ::c_int = 142;
pub const EWOULDBLOCK: ::c_int = 11;
pub const __ELASTERROR: ::c_int = 2000;

// Many of these look like they're just newlib config flags, but
// I'm too lazy to sort through them all
pub const ST_RDONLY: ::c_int = 1;
pub const ST_NOSUID: ::c_int = 2;
pub const _FREAD: ::c_uchar = 1;
pub const _FWRITE: ::c_uchar = 2;
pub const _FAPPEND: ::c_uchar = 8;
pub const _FMARK: ::c_uchar = 16;
pub const _FDEFER: ::c_uchar = 32;
pub const _FASYNC: ::c_uchar = 64;
pub const _FSHLOCK: ::c_uchar = 128;
pub const _FEXLOCK: ::c_ushort = 256;
pub const _FCREAT: ::c_ushort = 512;
pub const _FTRUNC: ::c_ushort = 1024;
pub const _FEXCL: ::c_ushort = 2048;
pub const _FNBIO: ::c_ushort = 4096;
pub const _FSYNC: ::c_ushort = 8192;
pub const _FNONBLOCK: ::c_ushort = 16384;
pub const _FNDELAY: ::c_ushort = 16384;
pub const _FNOCTTY: ::c_ushort = 32768;
pub const O_RDONLY: ::c_int = 0;
pub const O_WRONLY: ::c_int = 1;
pub const O_RDWR: ::c_int = 2;
pub const O_APPEND: ::c_int = 8;
pub const O_CREAT: ::c_int = 512;
pub const O_TRUNC: ::c_int = 1024;
pub const O_EXCL: ::c_int = 2048;
pub const O_SYNC: ::c_int = 8192;
pub const O_NONBLOCK: ::c_int = 16384;
pub const O_NOCTTY: ::c_int = 32768;
pub const FAPPEND: ::c_uchar = 8;
pub const FSYNC: ::c_int = 8192;
pub const FASYNC: ::c_uchar = 64;
pub const FNBIO: ::c_ushort = 4096;
pub const FNONBIO: ::c_ushort = 16384;
pub const FNDELAY: ::c_ushort = 16384;
pub const FREAD: ::c_uchar = 1;
pub const FWRITE: ::c_uchar = 2;
pub const FMARK: ::c_uchar = 16;
pub const FDEFER: ::c_uchar = 32;
pub const FSHLOCK: ::c_uchar = 128;
pub const FEXLOCK: ::c_ushort = 256;
pub const FCREAT: ::c_ushort = 512;
pub const FTRUNC: ::c_ushort = 1024;
pub const FEXCL: ::c_ushort = 2048;
pub const FNOCTTY: ::c_ushort = 32768;
pub const FNONBLOCK: ::c_ushort = 16384;
pub const FD_CLOEXEC: ::c_int = 1;
pub const F_DUPFD: ::c_int = 0;
pub const F_GETFD: ::c_int = 1;
pub const F_SETFD: ::c_int = 2;
pub const F_GETFL: ::c_int = 3;
pub const F_SETFL: ::c_int = 4;
pub const F_GETOWN: ::c_uchar = 5;
pub const F_SETOWN: ::c_uchar = 6;
pub const F_GETLK: ::c_uchar = 7;
pub const F_SETLK: ::c_uchar = 8;
pub const F_SETLKW: ::c_uchar = 9;
pub const F_RGETLK: ::c_uchar = 10;
pub const F_RSETLK: ::c_uchar = 11;
pub const F_CNVT: ::c_uchar = 12;
pub const F_RSETLKW: ::c_uchar = 13;
pub const F_DUPFD_CLOEXEC: ::c_int = 14;
pub const F_RDLCK: ::c_uchar = 1;
pub const F_WRLCK: ::c_uchar = 2;
pub const F_UNLCK: ::c_uchar = 3;
pub const F_UNLKSYS: ::c_uchar = 4;
pub const AT_EACCESS: ::c_uchar = 1;
pub const AT_SYMLINK_NOFOLLOW: ::c_uchar = 2;
pub const AT_SYMLINK_FOLLOW: ::c_uchar = 4;
pub const AT_REMOVEDIR: ::c_uchar = 8;
pub const LOCK_SH: ::c_uchar = 1;
pub const LOCK_EX: ::c_uchar = 2;
pub const LOCK_NB: ::c_uchar = 4;
pub const LOCK_UN: ::c_uchar = 8;
pub const __BIT_TYPES_DEFINED__: ::c_uchar = 1;
pub const __int20: ::c_uchar = 2;
pub const __int8_t_defined: ::c_uchar = 1;
pub const __int16_t_defined: ::c_uchar = 1;
pub const __int32_t_defined: ::c_uchar = 1;
pub const __int64_t_defined: ::c_uchar = 1;
pub const __int_least8_t_defined: ::c_uchar = 1;
pub const __int_least16_t_defined: ::c_uchar = 1;
pub const __int_least32_t_defined: ::c_uchar = 1;
pub const __int_least64_t_defined: ::c_uchar = 1;
pub const __int_fast8_t_defined: ::c_uchar = 1;
pub const __int_fast16_t_defined: ::c_uchar = 1;
pub const __int_fast32_t_defined: ::c_uchar = 1;
pub const __int_fast64_t_defined: ::c_uchar = 1;
pub const WINT_MIN: ::c_uchar = 0;
pub const _LITTLE_ENDIAN: ::c_ushort = 1234;
pub const _BIG_ENDIAN: ::c_ushort = 4321;
pub const _PDP_ENDIAN: ::c_ushort = 3412;
pub const _BYTE_ORDER: ::c_ushort = 1234;
pub const _QUAD_HIGHWORD: ::c_uchar = 1;
pub const _QUAD_LOWWORD: ::c_uchar = 0;
pub const LITTLE_ENDIAN: ::c_ushort = 1234;
pub const BIG_ENDIAN: ::c_ushort = 4321;
pub const PDP_ENDIAN: ::c_ushort = 3412;
pub const BYTE_ORDER: ::c_ushort = 1234;
pub const FD_SETSIZE: ::c_uchar = 64;
pub const _NULL: ::c_uchar = 0;
pub const _ATEXIT_SIZE: ::c_uchar = 32;
pub const _RAND48_SEED_0: ::c_ushort = 13070;
pub const _RAND48_SEED_1: ::c_ushort = 43981;
pub const _RAND48_SEED_2: ::c_ushort = 4660;
pub const _RAND48_MULT_0: ::c_ushort = 58989;
pub const _RAND48_MULT_1: ::c_ushort = 57068;
pub const _RAND48_MULT_2: ::c_uchar = 5;
pub const _RAND48_ADD: ::c_uchar = 11;
pub const _REENT_EMERGENCY_SIZE: ::c_uchar = 25;
pub const _REENT_ASCTIME_SIZE: ::c_uchar = 26;
pub const _REENT_SIGNAL_SIZE: ::c_uchar = 24;
pub const _N_LISTS: ::c_uchar = 30;
pub const _CLOCKS_PER_SEC_: ::c_ushort = 1000;
pub const CLOCKS_PER_SEC: ::c_ushort = 1000;
pub const CLK_TCK: ::c_ushort = 1000;
pub const CLOCK_ENABLED: ::c_uchar = 1;
pub const CLOCK_DISABLED: ::c_uchar = 0;
pub const CLOCK_ALLOWED: ::c_uchar = 1;
pub const CLOCK_DISALLOWED: ::c_uchar = 0;
pub const TIMER_ABSTIME: ::c_uchar = 4;
pub const _IFMT: ::c_ushort = 61440;
pub const _IFDIR: ::c_ushort = 16384;
pub const _IFCHR: ::c_ushort = 8192;
pub const _IFBLK: ::c_ushort = 24576;
pub const _IFREG: ::c_ushort = 32768;
pub const _IFLNK: ::c_ushort = 40960;
pub const _IFSOCK: ::c_ushort = 49152;
pub const _IFIFO: ::c_ushort = 4096;
pub const S_BLKSIZE: ::c_ushort = 1024;
pub const S_ISUID: ::c_ushort = 2048;
pub const S_ISGID: ::c_ushort = 1024;
pub const S_ISVTX: ::c_ushort = 512;
pub const S_IREAD: ::c_ushort = 256;
pub const S_IWRITE: ::c_uchar = 128;
pub const S_IEXEC: ::c_uchar = 64;
pub const S_ENFMT: ::c_ushort = 1024;
pub const S_IFMT: ::mode_t = 61440;
pub const S_IFDIR: ::mode_t = 16384;
pub const S_IFCHR: ::mode_t = 8192;
pub const S_IFBLK: ::mode_t = 24576;
pub const S_IFREG: ::mode_t = 32768;
pub const S_IFLNK: ::mode_t = 40960;
pub const S_IFSOCK: ::mode_t = 49152;
pub const S_IFIFO: ::mode_t = 4096;
pub const S_IRUSR: ::mode_t = 256;
pub const S_IWUSR: ::mode_t = 128;
pub const S_IXUSR: ::mode_t = 64;
pub const S_IRGRP: ::mode_t = 32;
pub const S_IWGRP: ::mode_t = 16;
pub const S_IXGRP: ::mode_t = 8;
pub const S_IROTH: ::mode_t = 4;
pub const S_IWOTH: ::mode_t = 2;
pub const S_IXOTH: ::mode_t = 1;
pub const DEFFILEMODE: ::c_ushort = 438;
pub const _FBINARY: ::c_uint = 65536;
pub const O_BINARY: ::c_uint = 65536;

pub const DT_FIFO: u8 = 1;
pub const DT_CHR: u8 = 2;
pub const DT_DIR: u8 = 4;
pub const DT_BLK: u8 = 6;
pub const DT_REG: u8 = 8;
pub const DT_LNK: u8 = 10;
pub const DT_SOCK: u8 = 12;

pub const O_CLOEXEC: ::c_int = 0x80000;
pub const O_ACCMODE: ::c_int = 3;

pub const SEEK_SET: ::c_int = 0;
pub const SEEK_CUR: ::c_int = 1;
pub const SEEK_END: ::c_int = 2;

pub const SIG_IGN: ::sighandler_t = 1 as ::sighandler_t;
pub const SIGPIPE: ::c_int = 13;





